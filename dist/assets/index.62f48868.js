var p=Object.defineProperty;var g=(e,t,i)=>t in e?p(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i;var o=(e,t,i)=>(g(e,typeof t!="symbol"?t+"":t,i),i);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))a(n);new MutationObserver(n=>{for(const s of n)if(s.type==="childList")for(const r of s.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&a(r)}).observe(document,{childList:!0,subtree:!0});function i(n){const s={};return n.integrity&&(s.integrity=n.integrity),n.referrerpolicy&&(s.referrerPolicy=n.referrerpolicy),n.crossorigin==="use-credentials"?s.credentials="include":n.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function a(n){if(n.ep)return;n.ep=!0;const s=i(n);fetch(n.href,s)}})();class b{constructor(t,i,a){o(this,"canvasWidth");o(this,"canvasHeight");o(this,"canvas");o(this,"ctx");o(this,"baseColor","#0000ff");o(this,"pointerPosition",new c(0,0));if(this.canvasWidth=t,this.canvasHeight=i,this.canvas=a,this.ctx=this.canvas.getContext("2d",{willReadFrequently:!0}),this.ctx===null)throw new Error("Context identifier not supported");this.render()}render(){this.canvas.width=this.canvasWidth,this.canvas.height=this.canvasHeight,this.fillCanvas(),this.canvas.addEventListener("click",t=>{let i=t.offsetX,a=t.offsetY;this.pointerPosition=new c(i,a),this.canvas.dispatchEvent(new CustomEvent("pointer",{detail:this.pointerPosition})),this.emitActualColor()})}setBaseColor(t){this.baseColor=t.rgbColor,this.fillCanvas(),this.emitActualColor()}emitActualColor(){let t=this.ctx.getImageData(this.pointerPosition.x,this.pointerPosition.y,1,1).data,i=`rgb(${t[0]}, ${t[1]}, ${t[2]})`;console.log("RGB: ",i),this.canvas.dispatchEvent(new CustomEvent("color",{detail:new d(t[0],t[1],t[2])})),document.body.style.background=i}fillCanvas(){let t=this.ctx.createLinearGradient(0,0,0,this.canvasHeight);this.setGradient(t,this.baseColor,"#fff");let i=this.ctx.createLinearGradient(0,0,this.canvasWidth,0);this.setGradient(i,"#000","rgba(0, 0, 0, 0)")}setGradient(t,i,a){t.addColorStop(0,i),t.addColorStop(1,a),this.ctx.fillStyle=t,this.ctx.fillRect(0,0,this.canvasWidth,this.canvasHeight)}}class d{constructor(t,i,a){o(this,"r");o(this,"g");o(this,"b");this.r=t,this.g=i,this.b=a}get rgbColor(){return`rgb(${this.r}, ${this.g}, ${this.b})`}}class c{constructor(t,i){o(this,"x");o(this,"y");this.x=t,this.y=i}}class m{constructor(t,i,a){o(this,"canvasWidth");o(this,"canvasHeight");o(this,"canvas");o(this,"ctx");if(this.canvasWidth=t,this.canvasHeight=i,this.canvas=a,this.ctx=this.canvas.getContext("2d",{willReadFrequently:!0}),this.ctx===null)throw new Error("Context identifier not supported");this.canvas.width=this.canvasWidth,this.canvas.height=this.canvasHeight;const n=["#f00","#ff0","#0f0","#0ff","#00f","#f0f","#f00"];for(let s=0;s<n.length-1;s++){let r=this.canvasWidth/(n.length-1);console.log(n[s],s,r);let l=this.ctx.createLinearGradient(s*r,0,(s+1)*r,0);l.addColorStop(0,n[s]),l.addColorStop(1,n[s+1]),this.ctx.fillStyle=l,this.ctx.fillRect(s*r,0,r,this.canvasHeight)}this.canvas.addEventListener("click",s=>{let r=s.offsetX,l=this.ctx.getImageData(r,1,1,1).data;this.canvas.dispatchEvent(new CustomEvent("color",{detail:new d(l[0],l[1],l[2])})),this.canvas.dispatchEvent(new CustomEvent("bar",{detail:new c(r,1)}))})}}document.querySelector("#app").innerHTML=`
  <div>
    <div class="color_picker_top-wrapper">
        <div class="shade_picker-container">
            <canvas id="shade_picker"></canvas>
            <div id="pointer" class="pointer">+</div>
        </div>
        <div class="inputs_container">
            <label for="red">RED: </label><input id="red">
            <label for="green">GREEN: </label><input id="green">
            <label for="blue">BLUE: </label><input id="blue">
        </div>
    </div>
 
    <div class="base_color_picker-container">
      <canvas id="base_color_picker"></canvas>
      <div id="color_bar" class="color_bar"></div>
    </div>
    
  </div>
`;let y=document.getElementById("red"),x=document.getElementById("green"),E=document.getElementById("blue");u(new c(0,0));v(new d(0,0,0));function v(e){y.value=String(e.r),x.value=String(e.g),E.value=String(e.b)}function u(e){let t=document.getElementById("pointer");t.style.top=`${e.y}px`,t.style.left=`${e.x}px`}function C(e){let t=document.getElementById("color_bar");t.style.left=`${e.x}px`}const h=document.getElementById("shade_picker"),f=document.getElementById("base_color_picker");h.addEventListener("color",e=>{let t=e.detail;console.log(t),v(t)},!1);h.addEventListener("pointer",e=>{let t=e.detail;u(t)},!1);f.addEventListener("bar",e=>{let t=e.detail;C(t)},!1);f.addEventListener("color",e=>{let t=e.detail;w.setBaseColor(t)},!1);const w=new b(300,300,h);new m(300,20,f);
